name: plenary CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ "ubuntu-latest", "macos-latest", "windows-latest" ]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.0
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        if: steps.cached-venv.outputs.cache-hit != 'true'
        run: poetry install --no-root --no-interaction

      - name: Lint with flake8
        run: |
          poetry run flake8 plenary tests --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 plenary tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          poetry run pytest tests/
